{"dependencies":[],"generated":{"js":"function styleObject2String(obj) {\n    var str = '';\n    Object.keys(obj).forEach(function (key) {\n        str += key + \":\" + obj[key] + \";\";\n    });\n    return str;\n}\nfunction create2Darray(x, y) {\n    var a = [];\n    for (var i = 0; i < x; i++) {\n        a.push([]);\n        for (var j = 0; j < y; j++) {\n            a[i][j] = '';\n        }\n    }\n    return a;\n}\nfunction create2DString(x, y) {\n    var str = '';\n    for (var i = 0; i < x; i++) {\n        for (var j = 0; j < y; j++) {\n            str += ' ';\n        }\n        str += '\\n';\n    }\n    return str;\n}\nvar ConsoleItem = /** @class */ (function () {\n    function ConsoleItem(item) {\n        this.item = item;\n        this.options = item.options;\n    }\n    ConsoleItem.prototype.translate = function (x, y) {\n        var position = this.options.position;\n        position.x = x;\n        position.y = y;\n    };\n    ConsoleItem.prototype.updateContent = function (content) {\n        this._item.content = content;\n    };\n    return ConsoleItem;\n}());\nvar ColorConsole = /** @class */ (function () {\n    function ColorConsole(width, height) {\n        this.items = [];\n        this.width = width;\n        this.height = height;\n    }\n    ColorConsole.prototype.addItem = function (content, options) {\n        if (options === void 0) { options = {\n            position: null,\n            style: null\n        }; }\n        var item = new ConsoleItem({\n            content: content,\n            options: options\n        });\n        this.items.push(item);\n        return item;\n    };\n    ColorConsole.prototype._calcItem = function (item) {\n        var _a = item.item, content = _a.content, options = _a.options;\n        var position, style;\n        if (options) {\n            position = options.position;\n            style = options.style;\n        }\n        var styleStr = '';\n        var col = 0;\n        if (position) {\n            var x = position.x, y = position.y;\n            col = y;\n            var indent = '';\n            for (var i = 0; i < x; i++) {\n                indent += ' ';\n            }\n            content = indent + content;\n        }\n        if (style) {\n            styleStr = styleObject2String(style);\n        }\n        return {\n            content: content,\n            styleStr: styleStr,\n            y: col\n        };\n    };\n    ColorConsole.prototype.render = function () {\n        var _this = this;\n        var str = '';\n        var items = this.items.map(function (item) {\n            return _this._calcItem(item);\n        });\n        var _loop_1 = function (i) {\n            var rowItems = items.filter(function (item) { return item.y === i; });\n            if (rowItems.length) {\n                rowItems.forEach(function (item) {\n                    str += item.content;\n                });\n            }\n            else {\n                for (var j = 0; j < this_1.height; j++) {\n                    str += ' ';\n                }\n            }\n            str += '\\n';\n        };\n        var this_1 = this;\n        for (var i = 0; i < this.width; i++) {\n            _loop_1(i);\n        }\n        console.log(\"%c \" + str, 'color: red');\n    };\n    ColorConsole.prototype.clear = function () {\n    };\n    return ColorConsole;\n}());\nvar cc = new ColorConsole(20, 50);\nvar item = cc.addItem('xxxxxx');\ncc.render();\n"},"hash":"0cb889e3b1d397a4d01916ec7f2c1285"}